(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[3],{"00d3":function(e,t,n){"use strict";var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticStyle:{"min-height":"inherit"}},[n("div",{ref:"blockly",staticClass:"blockly-wrap"}),n("xml",{ref:"toolbox",staticStyle:{display:"none"}},[e._t("default")],2)],1)},a=[],s=(n("ddb0"),n("ded3")),o=n.n(s),i=n("54ca"),c=n.n(i),l=n("2f62"),p="/**\r\n * IMPORTANT NOTE\r\n * This project MUST be ES5 compliant as that is what the JS Interpreter uses\r\n */\r\n\r\n/**\r\n * Simple tests\r\n */\r\nhasNumber = /\\d/\r\n \r\n/**\r\n * Stores events being listened to\r\n * {eventName: [...callbacks]}\r\n */\r\n_events = {}\r\n\r\n/**\r\n * console.log helper to properly send data to main app w/o obfuscation\r\n */\r\nconsole = {\r\n  log: function (arguments) {\r\n    log(JSON.stringify(arguments))\r\n  }\r\n}\r\n\r\n/**\r\n * target.addEventListener subsitution\r\n * @param {String} eventName The eventName to store this callback under\r\n * @param {Array} args The list of arguments\r\n * @param {Function} callback The function to call when this event is triggered\r\n */\r\naddEventListener = function (eventName, args, callback) {\r\n  if (!_events[eventName]) {\r\n    _events[eventName] = []\r\n  }\r\n\r\n  _events[eventName].push({\r\n    args: args,\r\n    callback: callback\r\n  })\r\n}\r\n\r\n/**\r\n * Trigger an event\r\n * @param {String} eventName \r\n * @param {*} payload\r\n */\r\ntriggerEvent = function (eventName, payload) {\r\n  _events[eventName] && _events[eventName].forEach(function (event) {\r\n    event.callback({\r\n      args: event.args,\r\n      payload: JSON.parse(payload)\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * Plays a note\r\n */\r\nplayNote = function (payload) {\r\n  _playNote(JSON.stringify(payload))\r\n}\r\n\r\n/**\r\n * Compre helper for working with \"is\", \"is not\", etc\r\n */\r\ncompare = function (a, compare, b) {\r\n  switch (compare) {\r\n    case 'is':\r\n      return a == b\r\n    case 'is not':\r\n      return a != b\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if a string belongs to the \"is any\" family (\"all\", \"any\", etc)\r\n */\r\nisAny = function (str) {\r\n  var list = ['any', 'all']\r\n  var isValid = false\r\n\r\n  list.forEach(function (item) {\r\n    if (str === item) isValid = true\r\n  });\r\n\r\n  return isValid\r\n}\r\n\r\n/**\r\n * Checks if a given note matches a webmidi.name\r\n * - If no octave present, then matches the key in any octave\r\n */\r\nisNote = function (a, compare, b) {\r\n  switch (compare) {\r\n    case 'is':\r\n      if (hasNumber.test()) {\r\n        return a == b.name.concat(b.octave)\r\n      } else {\r\n        return a == b.name\r\n      }\r\n\r\n    case 'is not':\r\n      if (hasNumber.test()) {\r\n        return a != b.name.concat(b.octave)\r\n      } else {\r\n        return a != b.name\r\n      }\r\n  }\r\n}",h=n("c62b"),d=n.n(h),u={name:"Blockly",props:["options"],watch:{"workspace.code"(e){this.$store.commit("set",["workspace.interpreter",new window.Interpreter(p+"\n"+this.workspace.code,this.setupInterpreter)]),this.workspace.interpreter.run()}},computed:o()({},Object(l["b"])(["workspace","devices"])),data(){return{blockly:null,interpreter:null}},mounted(){let e=this.$props.options||{};e.toolbox||(e.toolbox=this.$refs.toolbox),this.blockly=c.a.inject(this.$refs.blockly,e),this.blockly.addChangeListener(this.onChange)},methods:{onChange(e){switch(e.type){case c.a.Events.BLOCK_CREATE:case c.a.Events.BLOCK_DELETE:case c.a.Events.BLOCK_CHANGE:case c.a.Events.BLOCK_MOVE:case c.a.Events.VAR_CREATE:case c.a.Events.VAR_DELETE:case c.a.Events.VAR_RENAME:this.$store.commit("set",["workspace.code",c.a.JavaScript.workspaceToCode(this.blockly)]);break}},setupInterpreter(e,t){e.setProperty(t,"log",e.createNativeFunction(e=>{console.log("ðŸ“¦ log: ",...JSON.parse(e))})),e.setProperty(t,"_playNote",e.createNativeFunction(e=>{let t=JSON.parse(e);"all"===t.device&&Object.keys(this.devices.outputs).forEach(e=>{const n=d.a.getOutputById(e);n.playNote(t.note,t.channel)})}))}}},b=u,m=n("2877"),k=Object(m["a"])(b,r,a,!1,null,null,null);t["a"]=k.exports},a0c0:function(e,t,n){"use strict";n.r(t);var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"full-height"},[e.isChecking?n("div",{staticClass:"full-height center-children"},[n("q-spinner",{attrs:{color:"primary",size:"5em"}})],1):n("div",{staticClass:"full-height"},[n("q-dialog",{attrs:{persistent:""},model:{value:!e.blocks.length,callback:function(t){e.$set(!e.blocks,"length",t)},expression:"!blocks.length"}},[n("q-card",{staticClass:"bg-negative"},[n("q-card-section",{staticClass:"row items-center"},[n("q-avatar",{staticClass:"text-negative",attrs:{icon:"fas fa-exclamation-triangle",color:"white"}}),n("span",{staticClass:"q-ml-sm text-white"},[n("code",[e._v("/block/"+e._s(e.id))]),e._v(" does not exist")])],1)],1)],1),e.blocks.length?n("Workspace",{ref:"workspace",staticClass:"blockly",staticStyle:{right:"0"},attrs:{options:e.options}},[n("category",{attrs:{name:"Readonly",colour:"#fff"}},e._l(e.blocks,(function(e){return n("block",{key:e.type,attrs:{type:e.type}})})),1)],1):e._e()],1)])},a=[],s=(n("e6cf"),n("a79d"),n("ded3")),o=n.n(s),i=n("2f62"),c=n("54ca"),l=n.n(c),p=n("00d3"),h={name:"PageReadOnly",computed:o()({},Object(i["b"])(["workspace"])),components:{Workspace:p["a"]},data(){return{isChecking:!0,id:this.$route.params.id,blocks:[],options:{media:"media/",grid:null,sounds:!1,toolbox:null,trashcan:!1,zoom:!1}}},mounted(){document.querySelector("body").classList.add("transparent"),this.$axios.get(this.$store.getters.endpoint("block/"+this.$route.params.id)).then(e=>{this.isChecking=!1,this.blocks=e.data.blocks,this.$nextTick(()=>{this.blocks.forEach(e=>{l.a.Blocks[e.title]={init:function(){this.jsonInit(JSON.parse(e.block_definition))}},l.a.JavaScript[e.title]=()=>"";const t=this.$refs.workspace.blockly.newBlock(e.title);t.initSvg(),t.render(),this.$refs.workspace.blockly.centerOnBlock(t.id),this.$refs.workspace.blockly.scroll(this.$refs.workspace.blockly.scrollX,this.$refs.workspace.blockly.scrollY)})})}).catch(e=>{console.log("ðŸš¨ Error: ",e)}).finally(()=>{this.isChecking=!1})}},d=h,u=n("2877"),b=n("0d59"),m=n("24e8"),k=n("f09f"),f=n("a370"),v=n("cb32"),g=n("eebe"),y=n.n(g),w=Object(u["a"])(d,r,a,!1,null,null,null);t["default"]=w.exports;y()(w,"components",{QSpinner:b["a"],QDialog:m["a"],QCard:k["a"],QCardSection:f["a"],QAvatar:v["a"]})}}]);